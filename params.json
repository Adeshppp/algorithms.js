{"name":"algorithms.js","tagline":"Traditional Computer Science algorithms and data structures implemented in JavaScript","body":"[![Build Status](https://travis-ci.org/felipernb/algorithms.js.png?branch=master)](https://travis-ci.org/felipernb/algorithms.js)\r\n[![Coverage Status](https://coveralls.io/repos/felipernb/algorithms.js/badge.png?branch=master)](https://coveralls.io/r/felipernb/algorithms.js?branch=master)\r\n\r\n# Atwood's Law applied to CS101.\r\n\r\nClassic algorithms and data structures implemented in JavaScript, you know... FOR SCIENCE.\r\n\r\n![](http://www.quickmeme.com/img/8d/8d30a19413145512ad5a05c46ec0da545df5ed79e113fcf076dc03c7514eb631.jpg)\r\n\r\n## Installing\r\n```\r\nnpm install --save algorithms\r\n```\r\n\r\n## Contents\r\n\r\n### Data Structures\r\n\r\n```javascript\r\nrequire('algorithms/data_structure');\r\n// or\r\nrequire('algorithms').DataStructure;\r\n```\r\n\r\n* BST\r\n* Graph\r\n* HashTable\r\n* Heap\r\n * MinHeap\r\n * MaxHeap\r\n* LinkedList\r\n* PriorityQueue\r\n* Queue\r\n* Stack\r\n* Set (HashSet)\r\n* DisjointSetForest\r\n\r\n### Graph algorithms\r\n\r\n```javascript\r\nrequire('algorithms/graph');\r\n// or\r\nrequire('algorithms').Graph;\r\n```\r\n\r\n* topologicalSort\r\n* eulerPath\r\n* depthFirstSearch\r\n* breadthFirstSearch\r\n\r\n#### Shortest path\r\n* bfsShortestPath\r\n* dijkstra\r\n* SPFA (Shortest Path Faster Algorithm)\r\n* bellmanFord\r\n* floydWarshall\r\n\r\n#### Minimum spanning tree\r\n* prim\r\n* kruskal\r\n\r\n### Math algorithms\r\n\r\n```javascript\r\nrequire('algorithms/math');\r\n// or\r\nrequire('algorithms').Math;\r\n```\r\n\r\n* fibonacci\r\n* fisherYates\r\n* gcd (Greatest common divisor)\r\n* extendedEuclidean\r\n* newtonSqrt\r\n* reservoirSampling\r\n* fastPower\r\n* nextPermutation\r\n* powerSet\r\n* shannonEntropy\r\n\r\n### Search algorithms\r\n\r\n```javascript\r\nrequire('algorithms/search');\r\n// or\r\nrequire('algorithms').Search;\r\n```\r\n\r\n* bfs (breadth-first search for binary trees)\r\n* binarySearch\r\n* dfs (depth-first search for binary trees)\r\n * inOrder (default)\r\n * preOrder\r\n * postOrder\r\n\r\n### Sorting algorithms\r\n\r\n```javascript\r\nrequire('algorithms/sorting');\r\n// or\r\nrequire('algorithms').Sorting;\r\n```\r\n\r\n* bubbleSort\r\n* countingSort\r\n* heapSort\r\n* quicksort\r\n* selectionSort\r\n* radixSort\r\n* insertionSort\r\n* shellSort\r\n\r\n### String algorithms\r\n\r\n```javascript\r\nrequire('algorithms/string');\r\n// or\r\nrequire('algorithms').String;\r\n```\r\n\r\n* levenshtein\r\n* rabinKarp\r\n* knuthMorrisPratt\r\n* huffman\r\n * encode\r\n * decode\r\n* hamming\r\n* longestCommonSubsequence\r\n* longestCommonSubstring\r\n\r\n","google":"UA-1708517-13","note":"Don't delete this file! It's used internally to help with page regeneration."}